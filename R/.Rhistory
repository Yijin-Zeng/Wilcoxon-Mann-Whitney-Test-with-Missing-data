library(devtools)
load_all()
check()
use_mit_license()
use_testthat()
use_test('boundsSumRank.R')
test()
use_test('boundsWMWStatistic.R')
test()
use_test('boundsPValueNoTies.R')
test()
use_test('boundsPValueWithTies.R')
test()
use_test('wmwm.test.R')
check()
?wilcox.test
document()
load_all()
?wmwm.test
load_all()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
?wmwm.test
document()
?wmwm.test
?wilcox.test
document()
>wmwm.test
?wmwm.test
load_all()
X <- rnorm(100,0,1)
Y <- rnorm(100,0,1)
X[1:10] <- NA
wmwm.test(X,Y)
document()
?wmwm.test
?wmwm.test
?wmwm.test
check()
document()
?wilcox.test
?wmwm.test
document()
?wmwm.test
library('momenchi2')
install.packages('momenchi2')
install.packages('momentchi2')
??momentchi2
library(momentchi2)
?`momentchi2-package`
?momentchi2
?momentchi2::lpb4
?momentchi2::lpb4
?wilcox.test
?wmwm.test
?wilcox.test
install()
?wmwm.test
?wmwm.test
?wmwm
??wmwm
document()
?wmwm.test
install()
?wmwm.test
test()
load_all()
load_all()
load_all()
library('devtools')
load_all()
?wmwm.test
install()
?wmwm.test
?wmwm.test
?wilcox.test
?document
document()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
X <- rnorm(100,0,1)
Y <- rnorm(100,0,1)
X[1:10] <- NA
wmwm.test(X,Y)
wmwm.test(X,Y, ties = TRUE)
document()
document()
wmwm.test(X,Y, ties = TRUE)
load_all()
wmwm.test(X,Y, ties = TRUE)
wmwm.test(X,Y, ties = FALSE)
X[11] <- X[12]
wmwm.test(X,Y, ties = FALSE)
document()
?wmwm.test
X
X[is.na(X)]
X[!is.na(X)]
X[!is.na(X)]
union(X[!is.na(X)], Y[!is.na(Y)])
load_all()
wmwm.test(X,Y)
wmwm.test(X,Y, ties = FALSE)
wmwm.test(X,Y, ties = FALSE, lower.boundary = 1)
wmwm.test(X,Y, ties = FALSE, lower.boundary = -1)
wmwm.test(X,Y, ties = FALSE, lower.boundary = 100)
wmwm.test(X,Y, ties = TRUE, lower.boundary = 100)
load_all()
install()
install()
document()
library(devtools)
install
install()
?wmwm.test
?wmwm.test
document()
?wmwm.test
install()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
document()
document()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
?wilcox.test
document()
?wilcox.test
?wmwm.test
document()
?wmwm.test
?wilcox.test
?wmwm.test
install()
?wmwm.test
?wmwm.test
document()
install()
?wmwm.test
document()
?wmwm.test
install()
?wmwm.test
document()
install()
?wmwm.test
load_all()
install()
document()
?wmwm.test
install()
?wmwm.test
document()
?wmwm.test
library(devtools)
usethis::use_release_issue()
check()
load_all()
install()
document()
?wmwm.test
install()
?wmwm.test
document()
?wmwm.test
?wmwm.test
document()
install()
?wmwm.test
document()
?wmwm.test
?wmwm.test
document()
check()
install()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
document()
?wmwm.test
document()
?wmwm
??wmwm
document()
usethis::use_package('stats')
document()
usethis::use_package('stats')
usethis::use_tidy_description()
ls
version
packageVersion('stats')
?install.packages
??stats
?momentchi2
??momentchi2
install.packages('remotes')
remove.packages('stats')
install.packages('renv')
library(renv)
revn::init()
renv::init()
version
library('devtools')
install.packages('devtools')
install.packages('devtools')
install.packages('devtools')
library(devtools)
load_all()
install()
?wmwm.test
check()
check()
usethis::use_readme_md()
usethis::use_readme_md()
usethis::use_readme_md()
usethis::use_readme_md()
library(devtools)
usethis::use_readme_rmd()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
# wmwm
<!-- badges: start -->
This package wmwm is to perform the two-sample Wilcoxon-Mann-Whitney test in the presence of missing data. The Wilcoxon-Mann-Whitney test, also known as Wilcoxon rank sum test or Mann-Whitney U test, is a non-parametric two-sample hypothesis testing method. Suppose `X` and `Y` are sets of univariate, distinct, real-valued samples assumed randomly selected from two populations. The null hypothesis of the test is that
While only subsets of `X` and `Y` are observed, denote observed samples in `X` and `Y` as `X'` and `Y'`, respectively. The Wilcoxon-Mann-Whitney test can not be carried out directly. The default method in stats::wilcox.test() is to ignore all unobserved samples and perform the test between `X'` and `Y'`.
build()
usethis::use_package('stats', min_version = '3.2.1')
document()
check()
check()
document()
check()
build_readme()
check()
library(devtools)
load_all()
library(momentchi2)
?momentchi2
?wmwm
document()
?wmwm.test
load_all()
check()
?`momentchi2-package`
document()
document()
document()
load_all()
?wmwm.test
?wmwm
document()
?wmwm
document()
document()
?wmwm
load_all()
document()
?wmwm.test
?wmwm
load_all()
document()
?wmwm
install()
?wmw
load_all()
?wmwm.test
?wmwm
document()
load_all()
usethis::use_package_doc()
usethis::use_import_from()
?wmwm
load_all()
document()
?wmwm
?momentchi2
